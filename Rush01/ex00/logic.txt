
			column
line	0 1 2 | 3 4 5 | 6 7 8

0		9 0 0 | 0 7 0 | 0 0 0
1		2 0 0 | 0 9 0 | 0 5 3 
2		0 6 0 | 0 1 2 | 4 0 0 
-------------------------------
3		8 4 0 | 0 0 1 | 0 9 0 
4		5 0 0 | 0 0 0 | 8 0 0 
5		0 3 1 | 0 0 4 | 0 0 0 
-------------------------------
6		0 0 3 | 7 0 0 | 6 8 0
7		0 9 0 | 0 5 0 | 7 4 1 
8		4 7 0 | 0 0 0 | 0 0 0 

			column
line	0 1 2 | 3 4 5 | 6 7 8

0		9 5 4 | 0 7 0 | 0 0 0
1		2 0 0 | 0 9 0 | 0 5 3 
2		0 6 0 | 0 1 2 | 4 0 0 
-------------------------------
3		8 4 0 | 0 0 1 | 0 9 0 
4		5 0 0 | 0 0 0 | 8 0 0 
5		0 3 1 | 0 0 4 | 0 0 0 
-------------------------------
6		0 0 3 | 7 0 0 | 6 8 0
7		0 9 0 | 0 5 0 | 7 4 1 
8		4 7 0 | 0 0 0 | 0 0 0 
9		*
solved = either 0 , 1, 2 !
if solved = 1 -> solved = -1 -> print with solved = -1
-----
x  = 0 , y = 0
next_x = 1
next_y = 0
because sudoku[0, 0] = 9 -> solve the next cell 

x =1, y = 0
next_x = 2, next_y = 0
(n runs from 1 to 9)



./a.out "9...7...." "2...9..53" ".6..124.." "84...1.9." "5.....8.." ".31..4..." "..37..68." ".9..5.741" "47......."

valid sudoku:
argc = 10, length of each argument is 9, and contain only '0'-'9' or a '.'
no number appear twice in same row, same column or same box

argv[1] = "9...7...."
argv[1][0] = '9' --> grid[0][0] = 9
argv[1][1] = '.' --> grid[0][1]= 0
...
argv[1][8] = '.' --> grid[0][1]= 0
argv[2][0] = '2' --> grid[1][1]= 2
argv[2][1] = '2' --> grid[1][1]= 2
...

argv[2] = "2...9..53"
...
argv[10] = "47......."